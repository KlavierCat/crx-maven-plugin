<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.google.code</groupId>
	<artifactId>crx-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<version>1.0-SNAPSHOT</version>

	<name>Chrome CRX Maven Plugin</name>
	<url>http://code.google.com/p/crx-maven-plugin/</url>
	<inceptionYear>2010</inceptionYear>
	<description>This plugin generates Google Chrome Web App (CRX) files.</description>

	<prerequisites>
		<maven>2.0.4</maven>
	</prerequisites>

	<licenses>
		<license>
			<name>New BSD License</name>
			<url>http://www.opensource.org/licenses/bsd-license.php</url>
		</license>
	</licenses>

	<organization>
		<name>Bitmenu, Inc.</name>
		<url>http://www.bitmenu.com/</url>
	</organization>

	<developers>
		<developer>
			<name>Jason Thrasher</name>
			<email>jason@bitmenu.com</email>
			<organization>Bitmenu, Inc.</organization>
			<organizationUrl>http://www.bitmenu.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>

	<scm>
		<connection>scm:svn:http://crx-maven-plugin.googlecode.com/svn/trunk</connection>
		<developerConnection>scm:svn:https://crx-maven-plugin.googlecode.com/svn/trunk</developerConnection>
		<url>http://code.google.com/p/crx-maven-plugin/source/browse/#svn/trunk</url>
	</scm>

	<issueManagement>
		<system>Google Code</system>
		<url>http://code.google.com/p/crx-maven-plugin/issues/list</url>
	</issueManagement>

	<repositories>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>google-code</id>
			<uniqueVersion>false</uniqueVersion>
			<name>crx-maven-plugin SVN Repository</name>
			<url>svn:https://crx-maven-plugin.googlecode.com/svn/maven2</url>
		</repository>
		<snapshotRepository>
			<id>google-code</id>
			<uniqueVersion>false</uniqueVersion>
			<name>crx-maven-plugin SVN Repository</name>
			<url>svn:https://crx-maven-plugin.googlecode.com/svn/maven2</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>2.0.4</version>
		</dependency>
	</dependencies>
	<build>
		<extensions>
			<extension>
				<groupId>org.jvnet.wagon-svn</groupId>
				<artifactId>wagon-svn</artifactId>
				<version>1.11</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<tags>
						<tag>
							<name>phase</name>
							<placement>a</placement>
							<head>phase: </head>
						</tag>
						<tag>
							<name>goal</name>
							<placement>a</placement>
							<head>goal: </head>
						</tag>
						<tag>
							<name>requiresDependencyResolution</name>
							<placement>a</placement>
							<head>requiresDependencyResolution: </head>
						</tag>
					</tags>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<links>
								<link>http://java.sun.com/j2se/1.5.0/docs/api</link>
								<link>http://maven.apache.org/ref/2.2.1/maven-plugin-api/apidocs</link>
							</links>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>2.6</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>run-its</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<version>1.3</version>
						<configuration>
							<projectsDirectory>src/it</projectsDirectory>
							<pomIncludes>
								<pomInclude>*/pom.xml</pomInclude>
							</pomIncludes>
							<postBuildHookScript>verify</postBuildHookScript>
							<localRepositoryPath>${basedir}/local-repo</localRepositoryPath>
							<goals>
								<goal>clean</goal>
								<goal>package</goal>
							</goals>
							<!-- <settingsFile>src/it/settings.xml</settingsFile> -->
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
						</configuration>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>install</goal>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<pemKey>${basedir}/key.pem</pemKey>
		<pemCert>${basedir}/cert.pem</pemCert>
	</properties>

</project>
